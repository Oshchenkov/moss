@using EC.App_LocalResources;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@using EC.Models.Database;
@using EC.Models;
@using EC.Models.ViewModels;
@{ 
    var report_id = (Int32)ViewBag.report_id;
    var user_id = (Int32)ViewBag.user_id;
    UserModel um = new UserModel(user_id);
    ReportModel rm = new ReportModel(report_id);
    GlobalFunctions glb = new GlobalFunctions();
    IDateTimeHelper m_DateTimeHelper = new DateTimeHelper();
    //string flag = "101px";
    string popup = null;
    if (ViewBag.popup != null)
    {
        popup = ViewBag.popup;
    }
}

<div class="firstHeader resolveSoledBlock">


    <div class="caseWaitApp">@rm.CaseStatusGreenBarTitle()</div>

    <div class="positionDropDown">
        <span class="dropDownfirstHeader flag"></span>
        <a href="#" class="closeCustom flag"></a>
    </div>
    <div class="positionActivityIcon">
        <div id="activityIcon"></div>
        <span>@GlobalRes.Activity</span>
    </div>
</div>

<div class="caseMediatorBig" style="display: none;">
    @if(rm.CaseStatusGreenBarSubTitle().Length > 0)
    { 
        <div class="littleText">
            @rm.CaseStatusGreenBarSubTitle()
        </div>
    }

        @foreach (CaseInvestigationStatusViewModel cisvm in rm.CaseClosuresMessages())
        {
            UserModel temp_um = new UserModel(cisvm.user_id);
            <div class="caseMediator">
                <div class="displayMediators">
                  <div class="blockPhoto">
                @if (cisvm.user_id != 0)
                {
                    @Html.Partial("~/Views/Shared/Helpers/_UserPreviewFace.cshtml", new ViewDataDictionary { { "user_id", cisvm.user_id }, { "is_owner", true } })
                }
                else
                {
                    <div class="status"></div>
                    <div class="anonimousReporterIcon"></div>
                }
               </div>
                </div>
                @if (cisvm.description.Length == 0)
                { 
                
                  <div class="forText">
                    <div class="boldText">
                        @temp_um._user.first_nm @temp_um._user.last_nm, @m_DateTimeHelper.ConvertDateToLongMonthString(cisvm.created_date)
                    </div>

                    @if (cisvm.case_closure_reason_id.HasValue)
                    {
                        <div class="boldText">
                            @GlobalRes.ReasonForCaseClosure: @glb.GetCaseClosureReasonById(cisvm.case_closure_reason_id.Value)
                        </div>
                        <div class="openSansText">
                            &nbsp;
                        </div>
                    }

                    @if (cisvm.outcome_id.HasValue)
                    {
                        <div class="boldText">
                            @GlobalRes.SuggestedOutcomeUp: @glb.GetOutcomeNameById(cisvm.outcome_id.Value)
                        </div>
                        <div class="openSansText">
                            &nbsp;
                        </div>
                    }
                    @if (cisvm.outcome_message != null && cisvm.outcome_message.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.CaseClosureReport:
                        </div>
                        <div class="openSansText">
                            @cisvm.outcome_message
                        </div>
                    }
                    @if (cisvm.executive_summary != null && cisvm.executive_summary.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.ExecutiveSummary:
                        </div>
                        <div class="openSansText">
                            @cisvm.executive_summary
                        </div>
                    }
                    @if (cisvm.facts_established != null && cisvm.facts_established.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.FactsEstablished:
                        </div>
                        <div class="openSansText">
                            @cisvm.facts_established
                        </div>
                    }

                    @if (cisvm.investigation_methodology != null && cisvm.investigation_methodology.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.InvestigationMethodology:
                        </div>
                        <div class="openSansText">
                            @cisvm.investigation_methodology
                        </div>
                    }
                    @if (cisvm.description_outcome != null && cisvm.description_outcome.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.DescriptionOutcome:
                        </div>
                        <div class="openSansText">
                            @cisvm.description_outcome
                        </div>
                    }
                    @if (cisvm.recommended_actions != null && cisvm.recommended_actions.Length > 0)
                    {
                        <div class="boldText">
                            @GlobalRes.RecommendedActions:
                        </div>
                        <div class="openSansText">
                            @cisvm.recommended_actions
                        </div>
                    }
                </div>
                
                }
                else
                {
                   <div class="caseMediator">
                            <div class="displayMediators">
                                <div class="blockPhoto">
                                    <div class="blockPhoto">
                                        <div class="blockPhoto">
                                            @Html.Partial("~/Views/Shared/Helpers/_UserPreviewFace.cshtml", new ViewDataDictionary { { "user_id", cisvm.user_id }, { "is_owner", true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="forText">
                                <div class="boldText">
                                    @cisvm.query_new_investigation_status_name
                                </div>
                                <div class="regularText">
                                    @temp_um._user.first_nm @temp_um._user.last_nm,    @m_DateTimeHelper.ConvertDateToLongMonthString(cisvm.created_date):
                                </div>


                                @if (cisvm.description != null && cisvm.description.Length > 0)
                                {
                                    <div class="boldText">
                                        &nbsp;
                                    </div>
                                    <div class="openSansText">
                                        @cisvm.description
                                    </div>
                                }

                               

                            </div>
                        </div>

                }
            </div>
            
        }
        <div class="caseMediator">
             <div class="caseResolution">
            <div class="postionButtons">
                @if ((rm._last_investigation_status().investigation_status_id == 4) && (um._user.role_id == 4) || (um._user.role_id == 5))
                {
                <div class="secondButton">
                    <div class="textInButton" id="approve_close">@GlobalRes.Approve.ToLower()</div>
                </div>
                <div class="firstButton">
                    <div class="textInButton" id="return_investigation">@GlobalRes.Returnnvestigation.ToLower()</div>
                </div>
                }
            </div>
        </div>
        </div>
    </div>


@*<script>

    $(".positionDropDown").on('click', function () {
        $(".positionDropDown .flag").toggle();
        $(".caseMediatorBig").slideToggle();
    });
</script>*@
