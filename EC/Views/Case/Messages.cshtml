@using EC.Models.Database;
@using EC.Models;
@using EC.App_LocalResources;
@using EC.Models.ViewModel;
@using EC.Models.App.Case;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@using EC.Constants;

@{
    
    @*<link type="text/css" href="~/Content/caseTasks.css" rel="stylesheet">*@
    <link type="text/css" href="~/Content/caseTasks.css" rel="stylesheet">
    var report_id = (Int32)ViewBag.report_id;
    var user_id = (Int32)ViewBag.user_id;
    List<attachment> attachmentFiles = (List<attachment>)ViewBag.attachmentFiles;
    IDateTimeHelper m_DateTimeHelper = new DateTimeHelper();
    Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";

    ReportModel rm = ViewBag.rm;
    UserModel um = ViewBag.um;

    GlobalFunctions glb = new GlobalFunctions();
    user _sender = new user();
    string report_name = ViewBag.report_name;
    string title = GlobalRes.MediatorsMessagesUp + report_name;
    string popup = null;
    if (ViewBag.popup != null)
    {
        popup = ViewBag.popup;
    }
    report_investigation_status ris = new report_investigation_status();
}
@model CaseMessagesModel
<body>

    <div class="blockContent">
        <!--leftBlockContent-->
        @Html.Partial("~/Views/PartialViews/_ReportDetailsLeft.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "attachmentFiles", attachmentFiles } })


        <div class="rightBlockContent">
            <div id="slider"><div class="reportIconWhite"></div></div>

            @if ((rm._investigation_status == ECGlobalConstants.investigation_status_resolution) || (rm._investigation_status == ECGlobalConstants.investigation_status_completed))
            {
                @Html.Partial("~/Views/Case/PartialView/GreenBarCaseResolutionRequest.cshtml")
            } 

            @*start*@
            @if (rm._investigation_status == ECGlobalConstants.investigation_status_closed)
            {
                <div class="firstHeader resolveSoledBlock">
                    <div class="caseWaitApp">@GlobalRes.CaseClosed</div>
                    <div class="positionDropDown">
                        <span class="dropDownfirstHeader flag" style="top: -19px;"></span>
                        <a href="#" class="closeCustom flag"></a>
                    </div>
                    <div class="positionActivityIcon">
                        <div id="activityIcon"></div>
                        <span>@GlobalRes.Activity</span>
                    </div>
                </div>

                if (((rm._investigation_status == ECGlobalConstants.investigation_status_closed) && (rm._previous_investigation_status_id == ECGlobalConstants.investigation_status_resolution)) || ((rm._investigation_status == ECGlobalConstants.investigation_status_closed) && (rm._previous_investigation_status_id == ECGlobalConstants.investigation_status_completed)))
                {
                    ris = rm._previous_investigation_status();
                    UserModel temp_um = new UserModel(ris.user_id);

                    <div class="caseMediatorBig" style="display: none;">
                        <div class="caseMediator">
                            <div class="displayMediators">
                                <div class="blockPhoto">
                                    @Html.Partial("~/Views/Shared/Helpers/_UserPreviewFace.cshtml", new ViewDataDictionary { { "user_id", ris.user_id }, { "is_owner", true } })
                                </div>
                            </div>
                            <div class="forText">
                                <div class="boldText">
                                    @if (ris.investigation_status_id == ECGlobalConstants.investigation_status_completed)
                                    {
                                        @GlobalRes.CaseCantBeResolved
                                    }
                                    else if (ris.investigation_status_id == ECGlobalConstants.investigation_status_resolution)
                                    {
                                        @GlobalRes.CaseResolved
                                    }
                                </div>
                                <div class="regularText">
                                    @temp_um._user.first_nm @temp_um._user.last_nm, @m_DateTimeHelper.ConvertDateToLongMonthString(ris.created_date):
                                </div>
                                <div class="openSansText">
                                    @ris.description
                                </div>

                                @if (ris.outcome_id.HasValue)
                                {
                                    <div class="boldText">
                                        @GlobalRes.Outcome: @glb.GetOutcomeNameById(ris.outcome_id.Value)
                                    </div>
                                    <div class="openSansText">
                                        @ris.outcome_message
                                    </div>
                                }

                            </div>
                            <div class="border"></div>
                        </div>
                        @{
                            ris = rm._last_investigation_status();
                            temp_um = new UserModel(ris.user_id);
                        }

                        <div class="caseMediator">
                            <div class="displayMediators">
                                <div class="blockPhoto">
                                    <div class="blockPhoto">
                                        <div class="blockPhoto">
                                            @Html.Partial("~/Views/Shared/Helpers/_UserPreviewFace.cshtml", new ViewDataDictionary { { "user_id", ris.user_id }, { "is_owner", true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="forText">
                                <div class="boldText">
                                    @GlobalRes.Approved
                                </div>
                                <div class="regularText">
                                    @temp_um._user.first_nm @temp_um._user.last_nm,    @m_DateTimeHelper.ConvertDateToLongMonthString(ris.created_date):
                                </div>
                                <div class="openSansText">
                                    @ris.description
                                </div>

                                @if (ris.outcome_id.HasValue)
                                {
                                    <div class="boldText">
                                        @GlobalRes.Outcome: @glb.GetOutcomeNameById(ris.outcome_id.Value)
                                    </div>
                                    <div class="openSansText">
                                        @ris.outcome_message
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                            }


                            }

            @*end*@
            <div class="firstHeader2">
                <div id="casesHeared">
                    <div id="menu">
                        @Html.Partial("~/Views/PartialViews/_ReportTopMenu.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "selected_item", 1 } ,{ "popup", popup } })
                    </div>
                </div>
            </div>
            <div class="positionActivityIcon" style="height:61px;">
                <div id="activityIcon"></div>
                <span>@GlobalRes.Activity</span>
            </div>
            @*<div id="casesHeared">
                <div id="menu">
                    @Html.Partial("~/Views/PartialViews/_ReportTopMenu.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "selected_item", 2 } ,{ "popup", popup }})
                </div>
                <div class="positionActivityIcon">
                    <div id="activityIcon"></div>
                    <span>@GlobalRes.Activity</span>
                </div>
            </div>*@
            
            
            <div class="blockMessages">
                <div class="topMessagesMenu" id="messages_menu">
                    @Html.Partial("~/Views/PartialViews/_ReportTopMessagesMenu.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "selected_item", 1 },{ "popup", popup } })
                </div>

                <div class="blockMessagesTable" id="__messages">
                    @foreach (var _messageViewModel in Model.AllMessagesList)
                    {
                        @Html.Partial("~/Views/Shared/Helpers/_SingleMessage.cshtml", _messageViewModel)
                    }
                </div>
                @if (rm._investigation_status != ECGlobalConstants.investigation_status_closed)
                {
                    using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="addComment">
                            <div class="content">
                                <div class="blockPersonal">
                                    <div class="blockPhoto">
                                        @{
                                                _sender = um.GetById(user_id);
                                                if ((_sender != null) && (_sender.id != 0))
                                                {
                                                    if (_sender.photo_path.Trim() != "")
                                                    {
                                                        <img src='@Url.Content(_sender.photo_path.Trim())' />
                                                    }
                                                    else
                                                    {
                                                        <img src='@Url.Content("~/Content/Icons/anonimousReporterIcon.png")' />
                                                    }
                                                }
                                        }
                                    </div>
                                    <div class="arrow"></div>
                                </div>
                                <div class="messageText1">
                                    <div class="headerTextarea">@GlobalRes.messageboardopen</div>
                                    @Html.TextAreaFor(model => model.body_tx, new { body_tx = "body_tx" })
                                </div>
                            </div>

                            <div class="newMessageBtn">
                                <input type="submit" value="new message" style="display: none;" />
                                <span>@GlobalRes.Sendtocasemediators.ToLower()</span>
                            </div>
                        </div><!--blockComments-->
                    }
                }

            </div>
            <div id="rightRight">
                @Html.Action("GetAjaxActivity", "Case", Html.Raw(report_id))
            </div>
        </div>

    </div><!--rightBlockContent-->

    <script type="text/javascript">
        $(document).ready(function () {
            $('.headTask span.createNewTaskBtn').click(function () { $('.blockCreateTask').show(); $('.headTask span.createNewTaskBtn').hide(); });
            $('.headerCreateTask label.close').click(function () { $('.blockCreateTask').hide(); $('.headTask span.createNewTaskBtn').show(); });


            /*update header triangle*/
            var links = $("#menu a");
            links.removeClass("active");
            $(links[1]).addClass('active');
            /*update header triangle*/

            $('.newMessageBtn span').click(
                function () {
                    if ($("#body_tx").val().trim().length > 0) {
                        addMessage(@Html.Raw(user_id), @Html.Raw(rm._report.id), $("#body_tx").val().trim());
                    } else {
                        $('textarea').css('border', '2px solid red');
                    }
                }
            );
            $(".leftBlockContent .closeIcon").click(function () {
                markAsFalse();
            });
            if (window.location.href.indexOf('false') > -1) {
                markAsFalse();
            }
            function markAsFalse(){
                $(".titleText").each(function (indx, element){
                    var temp = $(element).parent();
                    var string = temp.attr('href');

                    string+='?popup=false';
               //     temp.attr("href", string);
                });
            }
            //START stile for textarea
            $('textarea')
                .focus(function () {
                    var varThis = $(this);
                    varThis.css('border', '2px solid #05b5a2');
                    varThis.attr("placeholder", "");
                    varThis.parent().find('.headerTextarea').css('background-color', '#05b5a2');
                    varThis.parent().parent().find('.blockPersonal').find('.arrow').css('border-right', '5px solid #05b5a2');
                })
                .focusout(function () {
                    var varThis = $(this);
                    varThis.css('border', '2px solid #b2bfc3');
                    varThis.attr("placeholder", "");
                    varThis.parent().find('.headerTextarea').css('background-color', '#b2bfc3');
                    varThis.parent().parent().find('.blockPersonal').find('.arrow').css('border-right', '5px solid #b2bfc3');
                });
            $(".positionActivityIcon").on('click', function showR() {
                $("#rightRight").toggle(300);
            });

            function addMessage(user_id, report_id, body_tx) {
                $.ajax({
                    // Get PartialView
                    async: false,
                    url: "/ReporterDashboard/AddedMessages",
                    data: { report_id: report_id, sender_id: user_id, reporter_access: 2, body_tx: body_tx },
                    success: function (result) {

                        $("#__messages").append(result);
                        $("#body_tx").val('');
                    },
                    error: function () {
                        console.log("Error adding message", error.data);
                    }
                });
            }

            $(".positionDropDown").on('click', function () {
                $(".positionDropDown .flag").toggle();
                $(".caseMediatorBig").slideToggle();
            });
        });
    </script>
</body>